[{"/Users/michelleluan/Documents/GitHub/tamuhack/client/src/index.js":"1","/Users/michelleluan/Documents/GitHub/tamuhack/client/src/App.js":"2","/Users/michelleluan/Documents/GitHub/tamuhack/client/src/reducers/index.js":"3","/Users/michelleluan/Documents/GitHub/tamuhack/client/src/actions/posts.js":"4","/Users/michelleluan/Documents/GitHub/tamuhack/client/src/styles.js":"5","/Users/michelleluan/Documents/GitHub/tamuhack/client/src/components/Posts/Posts.js":"6","/Users/michelleluan/Documents/GitHub/tamuhack/client/src/components/Form/Form.js":"7","/Users/michelleluan/Documents/GitHub/tamuhack/client/src/reducers/posts.js":"8","/Users/michelleluan/Documents/GitHub/tamuhack/client/src/components/Posts/styles.js":"9","/Users/michelleluan/Documents/GitHub/tamuhack/client/src/components/Posts/Post/Post.js":"10","/Users/michelleluan/Documents/GitHub/tamuhack/client/src/components/Form/styles.js":"11","/Users/michelleluan/Documents/GitHub/tamuhack/client/src/api/index.js":"12","/Users/michelleluan/Documents/GitHub/tamuhack/client/src/components/Posts/Post/styles.js":"13"},{"size":470,"mtime":1612081729633,"results":"14","hashOfConfig":"15"},{"size":6738,"mtime":1612112394207,"results":"16","hashOfConfig":"15"},{"size":114,"mtime":1612074364437,"results":"17","hashOfConfig":"15"},{"size":993,"mtime":1612102869573,"results":"18","hashOfConfig":"15"},{"size":895,"mtime":1612112328159,"results":"19","hashOfConfig":"15"},{"size":784,"mtime":1612110831938,"results":"20","hashOfConfig":"15"},{"size":4132,"mtime":1612110371621,"results":"21","hashOfConfig":"15"},{"size":477,"mtime":1612102869587,"results":"22","hashOfConfig":"15"},{"size":368,"mtime":1612104880044,"results":"23","hashOfConfig":"15"},{"size":3923,"mtime":1612110507056,"results":"24","hashOfConfig":"15"},{"size":1239,"mtime":1612102869578,"results":"25","hashOfConfig":"15"},{"size":338,"mtime":1612102869574,"results":"26","hashOfConfig":"15"},{"size":1197,"mtime":1612102869583,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"yo79am",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},"/Users/michelleluan/Documents/GitHub/tamuhack/client/src/index.js",[],["58","59"],"/Users/michelleluan/Documents/GitHub/tamuhack/client/src/App.js",["60"],"/Users/michelleluan/Documents/GitHub/tamuhack/client/src/reducers/index.js",[],"/Users/michelleluan/Documents/GitHub/tamuhack/client/src/actions/posts.js",[],"/Users/michelleluan/Documents/GitHub/tamuhack/client/src/styles.js",[],"/Users/michelleluan/Documents/GitHub/tamuhack/client/src/components/Posts/Posts.js",[],"/Users/michelleluan/Documents/GitHub/tamuhack/client/src/components/Form/Form.js",[],"/Users/michelleluan/Documents/GitHub/tamuhack/client/src/reducers/posts.js",["61"],"export default (posts = [], action) => {\n    switch(action.type) {\n        case 'FETCH_ALL':\n            return action.payload;\n\n        case 'CREATE':\n            return [...posts, action.payload];\n\n        case 'UPDATE':\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n        \n        case 'DELETE':\n            return posts.filter((post) => post._id !== action.payload);\n\n        default:\n            return posts;\n    }\n}","/Users/michelleluan/Documents/GitHub/tamuhack/client/src/components/Posts/styles.js",[],"/Users/michelleluan/Documents/GitHub/tamuhack/client/src/components/Posts/Post/Post.js",["62","63","64","65","66","67"],"import React from 'react';\nimport useStyles from './styles';\n\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, Divider } from '@material-ui/core/';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport EditIcon from '@material-ui/icons/EditRounded';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { deletePost } from '../../../actions/posts';\n\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\n    \nconst Post = ({ post, setCurrentId }) => {\n    const dispatch = useDispatch();    \n    const classes = useStyles();\n\n    return (\n        <Card className={classes.card}>\n\n        <div className={classes.cardHeader}>\n            <Typography className={classes.eventName} variant=\"h5\">\n                {post.eventname ? `${post.eventname}` : 'NA'}\n            </Typography>\n\n            <CardActions disableSpacing className={classes.cardActions}>\n                <IconButton className={classes.iconButton} aria-label=\"Edit event\" onClick={() => setCurrentId(post._id)}>\n                    <EditIcon style={{ color: \"white\" }} fontSize=\"small\" />\n                </IconButton>\n                <IconButton className={classes.iconButton} aria-label=\"Delete event\" onClick={() => dispatch(deletePost(post._id))}>\n                    <DeleteIcon style={{ color: \"white\" }} fontSize=\"small\" />\n                </IconButton>\n            </CardActions>\n        </div>\n\n            <div className={classes.cardContent}>\n                <div className={classes.cardSection}>\n                    <Typography className={classes.cardSubtitle} variant=\"body1\">\n                        Time\n                    </Typography>\n                    <div className={classes.sectionTextBlock}>\n                        <Typography className={classes.sectionText} variant=\"body2\">\n                            {post.time ? `${post.time}` : 'NA'}\n                        </Typography>\n                    </div>\n                </div>\n\n\n                <div className={classes.cardSection}>\n                    <Typography className={classes.cardSubtitle} variant=\"body1\">\n                        Location\n                    </Typography>\n                    <div className={classes.sectionTextBlock}>\n                        <Typography className={classes.sectionText} variant=\"body2\">\n                            {post.location ? `${post.location}` : 'NA'}\n                        </Typography>\n                    </div>\n                </div>\n\n\n                <div className={classes.cardSection}>\n                    <Typography className={classes.cardSubtitle} variant=\"body1\">\n                        People\n                    </Typography>\n                    <div className={classes.sectionTextBlock}>\n                        <Typography className={classes.sectionText} variant=\"body2\">\n                            {post.people ? `${post.people}` : 'NA'}\n                        </Typography>\n                    </div>\n                </div>\n\n                <div className={classes.cardSection}>\n                    <Typography className={classes.cardSubtitle} variant=\"body1\">\n                        Info and Notes\n                    </Typography>\n                    <div className={classes.sectionTextBlock}>\n                        <Typography className={classes.sectionText} variant=\"body2\">\n                            {post.info ? `${post.info}` : 'NA'}\n                        </Typography>\n                    </div>\n                </div>\n\n\n            </div>\n\n            {/* <CardMedia className={classes.media} eventname={post.eventname}/>\n            <div className={classes.overlay}>\n                <Typography variant=\"h6\">{post.creator}</Typography>\n                <Typography variant=\"body2\">{post.creator}</Typography>\n            </div> */}\n        </Card>\n    );\n}\n\nexport default Post;","/Users/michelleluan/Documents/GitHub/tamuhack/client/src/components/Form/styles.js",[],"/Users/michelleluan/Documents/GitHub/tamuhack/client/src/api/index.js",[],"/Users/michelleluan/Documents/GitHub/tamuhack/client/src/components/Posts/Post/styles.js",["68"],"import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    borderRadius: '15px',\n    height: '100%',\n    position: 'relative',\n  },\n  grid: {\n    display: 'flex',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  cardHeader: {\n    backgroundColor: '#29677B',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  eventName: {\n    color: 'white',\n    fontWeight: 'bold',\n    alignSelf: 'center',\n    marginLeft: 35,\n    padding: '20px 0',\n  },\n  cardContent: {\n    padding: 35,\n    paddingTop: 20,\n    paddingBottom: 5,\n  },\n  cardActions: {\n    // backgroundColor: 'green',\n  },\n  cardSection: {\n    marginBottom: 25,\n  },\n  cardSubtitle: {\n    color: '#07222B',\n    fontSize: 19,\n    fontWeight: 'bold',\n  },\n  sectionTextBlock: {\n    padding: '6px 10px',\n    margin: '7px 5px 5px 0px',\n    borderLeft: '3px solid #215363',\n  },\n  iconButton: {\n    '&:hover': {\n      backgroundColor: '#0583a9',\n    },\n  }\n});",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":11,"column":10,"nodeType":"75","messageId":"76","endLine":11,"endColumn":20},{"ruleId":"77","severity":1,"message":"78","line":1,"column":1,"nodeType":"79","endLine":18,"endColumn":2},{"ruleId":"73","severity":1,"message":"80","line":4,"column":29,"nodeType":"75","messageId":"76","endLine":4,"endColumn":40},{"ruleId":"73","severity":1,"message":"81","line":4,"column":42,"nodeType":"75","messageId":"76","endLine":4,"endColumn":51},{"ruleId":"73","severity":1,"message":"82","line":4,"column":53,"nodeType":"75","messageId":"76","endLine":4,"endColumn":59},{"ruleId":"73","severity":1,"message":"83","line":4,"column":73,"nodeType":"75","messageId":"76","endLine":4,"endColumn":80},{"ruleId":"73","severity":1,"message":"84","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":21},{"ruleId":"73","severity":1,"message":"85","line":12,"column":8,"nodeType":"75","messageId":"76","endLine":12,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":68,"column":3,"nodeType":"88","messageId":"89","endLine":68,"endColumn":14},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'MoreHorizIcon' is defined but never used.","'moment' is defined but never used.","no-dupe-keys","Duplicate key 'cardActions'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]